<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Server</name>
    </assembly>
    <members>
        <member name="M:Server.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:Server.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,Server.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:Server.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:Server.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:Server.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:Server.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:Server.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Server.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:Server.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:Server.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:Server.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:Server.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Server.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:Server.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,Server.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,Server.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:Server.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:Server.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:Server.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(Server.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:Server.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:Server.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Server.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:Server.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:Server.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:Server.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleKey.#ctor(Server.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Server.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:Server.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:Server.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:Server.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,Server.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:Server.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:Server.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:Server.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:Server.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:Server.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:Server.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Server.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:Server.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:Server.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:Server.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:Server.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:Server.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Server.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:Server.Authentication.Authenticator">
            <summary>
            Pro oveřování
            </summary>
        </member>
        <member name="M:Server.Authentication.Authenticator.#ctor(Server.Models.MySQLContext)">
            <summary>
            Nutno pokud jiná třída již používá tento kontext
            </summary>
            <param name="mySQLContext"></param>
        </member>
        <member name="M:Server.Authentication.Authenticator.LoginUser(System.String,System.String)">
            <summary>
            Pokusí se přihlásit uživatele a vrátí uuid
            </summary>
                Argument Exception 
                    pokud heslo není platné
                NullReference Exception
                    pokud uživatel s daným jménem nebyl nalezen
            <param name="nickname"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetValidUuid(Server.Models.User)">
            <summary>
            Pomocná třída pro LoginUser
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetUserFromUuid(System.Guid)">
            <summary>
            Získá z Uuid objekt uživatele
            </summary>
            <param name="uuid"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetDaemonFromUuid(System.Guid)">
            <summary>
            Vracé z Uuid objekt daemona
            </summary>
            <param name="sessionUuid"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.IntroduceDaemon(Server.Models.DaemonPreSharedKey,System.String,System.String,System.Int32,System.Char[],System.String)">
            <summary>
            Introducne daemona
            </summary>
            <param name="preSharedKey"></param>
            <param name="os"></param>
            <param name="mac"></param>
            <param name="idUser"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.IsDaemonAllowed(System.Guid,Server.Authentication.Permission)">
            <summary>
            Zjistí jestli daemon s daným uuid může udělat danou věc
            </summary>
            <param name="daemonUuid">Daemonovo uuid</param>
            <param name="permission"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.IsUserAllowed(System.String,Server.Authentication.Permission)">
            <summary>
            Zjistí jestli daemon s daným uuid může udělat danou věc
            </summary>
            <param name="nickname"></param>
            <param name="permission"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetGroupsFromUserNickname(System.String)">
            <summary>
            Zjistí všechny skupiny uživatele z jeho nicku
            </summary>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetGroupsFromUserId(System.Int32)">
            <summary>
            Zjistí všechny skupiny uživatele z jeho Id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetPermissionsFromUserNickname(System.String)">
            <summary>
            Zjistí všechny permisse uživatele z jeho nicku
            Pokud má uživatel Permission.SKIP tak se vrátí kolekce pouze s tímto prvkem
            </summary>
            <param name="nickname"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetPermissionsFromUserId(System.Int32)">
            <summary>
            Zjistí všechny permisse uživatele z jeho Id
            Pokud má uživatel Permission.SKIP tak se vrátí kolekce pouze s tímto prvkem
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.GetPresharedFromId(System.Int32)">
            <summary>
            Zjístí předzdílen=y klíč s daným ID, toto ID není ID uživatele
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.IsPresharedValid(System.Int32,System.String)">
            <summary>
            Zjistí jestli předzdílený klíč je platný
            </summary>
            <param name="id"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.IsSessionValid(System.Guid,System.Boolean,System.Boolean)">
            <summary>
            Zjistí zda sezení je platné
            </summary>
            <param name="uuid"></param>
            <param name="IsDaemon"></param>
            <param name="refreshTime"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.IsUserSessionValid(System.Guid,System.Boolean)">
            <summary>
            Zjistí zda sezení usera je platné
            </summary>
            <param name="uuid"></param>
            <param name="refreshTime"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.Authenticator.IsDaemonSessionValid(System.Guid,System.Boolean)">
            <summary>
            Zjistí zda sezení daemona je platné
            </summary>
            <param name="sessionUuid"></param>
            <param name="refreshTime"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.DaemonIntroducer.ReadIntroduction(Shared.NetMessages.IntroductionMessage)">
            <summary>
            Musí být zavolána první. Načtě zprávu, nidky nehází exceptiony
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Server.Authentication.DaemonIntroducer.EnterDBGetPass(Server.Models.DaemonPreSharedKey)">
            <summary>
            Vloží data do databáze
            </summary>
            <param name="dbPreShared"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.DaemonIntroducer.AddToDBMakeResponse">
            <summary>
            Přidá daemona do databáze a pošle heslo
            </summary>
            <returns></returns>
        </member>
        <member name="M:Server.Authentication.DaemonIntroducer.IsValid">
            
            <summary>
            Ověří zda jsou údaje platné
            </summary>
            <returns></returns>
        </member>
        <member name="F:Server.Authentication.DaemonLoginer.LOGIN_PERIOD">
            <summary>
            Login extension period in minutes
            </summary>
        </member>
        <member name="M:Server.Authentication.DaemonLoginer.LoginAndGetSessionUuid(System.Guid,System.String)">
            <summary>
            Prihlasi daemona, hazi ArgumentException nebo ArgumentNullexception pokud nastane chyba
            </summary>
            <param name="uuid"></param>
            <param name="password"></param>
            <returns>Uuid</returns>
        </member>
        <member name="T:Server.Authentication.Group">
            <summary>
            SQL GroupEnum view
            </summary>
        </member>
        <member name="T:Server.Authentication.Permission">
            <summary>
            SQL PermissionEnum
            </summary>
        </member>
        <member name="T:Server.Controllers.AdminBaseController">
            <summary>
            Základni třída pro všechny kontrolery, kterými se ovládá chování nebo data v Backupperu
            Obsahuje logiku pro kontrolu přihlášení uživatele
            </summary>
        </member>
        <member name="M:Server.Controllers.AdminBaseController.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            Jakákoliv výjimka, která se sem dostane bude zobrazena na AdminError stránce
            </summary>
            <param name="fc"></param>
        </member>
        <member name="T:Server.Controllers.AdminSecAttribute">
            <summary>
            Pokud je použit zajistí, že se k metodě v kontroleru dostanou přihlášení uživatelé se specifikovanými permisemi
            </summary>
        </member>
        <member name="M:Server.Controllers.AdminSecAttribute.#ctor(Server.Authentication.Permission[])">
            <summary>
            Constructor: if any permissions are specified then user is required to have at least one of them
            </summary>
            <param name="permissions"></param>
        </member>
        <member name="M:Server.Controllers.AdminSecAttribute.OnAuthentication(System.Web.Mvc.Filters.AuthenticationContext)">
            <summary>
            Přihlásí uživatele
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="M:Server.Controllers.AdminSecAttribute.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            Načte permise z databáze a zkontroluje, že uživatel může pokračovat dál
            </summary>
            <param name="filterContext"></param>
        </member>
        <member name="T:Server.Controllers.AdminSetupController">
            <summary>
            Použité pro první nastavení serveru. resp. prvního admin účtu a connection stringu
            Connection string jde později změnit ServerSettings
            </summary>
        </member>
        <member name="M:Server.Controllers.ChangedTaskController.Post(Shared.NetMessages.ChangedTaskMessage)">
            <summary>
            Daemon získá změny v taskové konfiguraci
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="T:Server.Controllers.IntroductionController">
            <summary>
            Vytváří daemony z preshared klíče a id, registruje vstupní info
            </summary>
        </member>
        <member name="M:Server.Controllers.IntroductionController.Put(Shared.NetMessages.IntroductionMessage)">
            <summary>
            Přijme introduction od daemonu a ověří
            </summary>
            <param name="value"></param>
            <returns>success pokud prošlo, jinak failure</returns>
        </member>
        <member name="M:Server.Controllers.LoginController.Post(Shared.NetMessages.LoginMessage)">
            <summary>
            Přihlásí daemona
            </summary>
            <param name="loginMessage"></param>
            <returns>OK pokud prihlasen jinak 400+ kod</returns>
        </member>
        <member name="M:Server.Controllers.OneClickController.Post(Shared.NetMessages.OneClickMessage)">
            <summary>
            Daemon se dozví jestli byl povolen adminem
            </summary>
            <param name="msg"></param>
            <returns>Pokud je povolen je mu přiděleno uuid s heslem, pokud ne tak je mu přiděleno nic</returns>
        </member>
        <member name="M:Server.Controllers.RSAForDaemonController.Post(Shared.NetMessages.RSAForDaemonMessage)">
            <summary>
            Daemon požádá o zašifrovaná private key svého majitele
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.TaskController.Put(Shared.NetMessages.TaskMessage)">
            <summary>
            Vytvoří tasky
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.TaskController.Post(Shared.NetMessages.TaskMessage)">
            <summary>
            Získá tasky pro daemona
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UniversalLogController.Put(Shared.NetMessages.LogMessages.UniversalLogMessage)">
            <summary>
            Daemon odešle log na server
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UniversalLogController.Post(Shared.NetMessages.LogMessages.UniversalLogMessage)">
            <summary>
            Neimplementováno
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UserController.Post(Shared.NetMessages.UserMessage)">
            <summary>
            Získá uživatele
            </summary>
            <param name="userMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UserController.Put(Shared.NetMessages.UserMessage)">
            <summary>
            Přidá uživatele
            </summary>
            <param name="userMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UserController.Patch(Shared.NetMessages.UserMessage)">
            <summary>
            Upraví uživatele
            </summary>
            <param name="userMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UserController.Delete(Shared.NetMessages.UserMessage)">
            <summary>
            Vymaže uživatele
            </summary>
            <param name="userMessage"></param>
            <returns></returns>
        </member>
        <member name="M:Server.Controllers.UserLoginController.Post(Shared.NetMessages.UserLoginMessage)">
            <summary>
            Zjistí jestli je login platný
            </summary>
            <param name="taskMessage"></param>
            <returns></returns>
        </member>
        <member name="T:Server.HostringEnvironmentRegisteredShutdownObject">
            <summary>
            Zajišťuje periodické zapisování uptimu serveru do databáze
            </summary>
        </member>
        <member name="F:Server.Installer.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:Server.Installer.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:Server.Installer.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:Server.Models.Admin.ServerSetupModel">
            <summary>
            Pro AdminSetup/Index
            </summary>
        </member>
        <member name="M:Server.Models.Admin.ServerSetupModel.Save">
            <summary>
            Otestuje jestli se jde připojit poskytnutým connection stringem k MySql serveru
            Pokud ano vytvoří admin uživatele dle zadaných parametrů
            </summary>
        </member>
        <member name="T:Server.Models.MySQLConnectionStringMaker">
            <summary>
            Poskytuje login info schované ve Web.config
            </summary>
            Pokud mySQL stále nefunguje přidejte nad classu
            tento annotation [DbConfigurationType(typeof(MySqlEFConfiguration))]
        </member>
        <member name="M:Server.Models.MySQLConnectionStringMaker.GetConnectionString">
            <summary>
            Získá connectionstring schovaná ve Web.config
            </summary>
            <returns></returns>
        </member>
        <member name="T:Server.Objects.AdminExceptions.AdminException">
            <summary>
            Základní vyjímka využívaná v grafické části admina
            </summary>
        </member>
        <member name="T:Server.Objects.AdminExceptions.AdminModelErrorException">
            <summary>
            Slouží pro chyby při validaci, neplatných datech nebo chybějících údajích 
            </summary>
        </member>
        <member name="T:Server.Objects.AdminExceptions.AdminSecurityException">
            <summary>
            Používané např. pro chybné přihlášení a nebo nedostatečné permise
            </summary>
        </member>
        <member name="T:Server.Objects.ConnectionStringHelper">
            <summary>
            Dynamicky ziska nebo nastavi connectionString
            </summary>
        </member>
        <member name="T:Server.Objects.MagicStrings">
            <summary>
            Obsahuje v kodu se opakujici textove retezce
            </summary>
        </member>
        <member name="T:Server.Objects.LogHandler">
            <summary>
            Slouzi pro praci s logy ze strany API
            </summary>
        </member>
        <member name="T:Server.Objects.MailHandler">
            <summary>
            Pomocna trida pro posilani emailu
            </summary>
        </member>
        <member name="T:Server.Objects.PList">
            <summary>
            Pomocna trida pro permise
            </summary>
        </member>
        <member name="T:Server.Objects.ServerLogger">
            <summary>
            Slouzi pro lokalni logovani na serveru
            </summary>
        </member>
        <member name="T:Server.Objects.SqlLogger">
            <summary>
            Slouzi k logovani do databaze
            </summary>
        </member>
        <member name="T:Server.Objects.TaskHandler">
            <summary>
            Pomocne metody pro praci s DbTasky pro API
            </summary>
        </member>
        <member name="T:Server.Objects.UptimeCalculator">
            <summary>
            Pocita hodnoty jak dlouho je server online, offline, z kolika procent byl online a od kdy se to pocita
            </summary>
        </member>
        <member name="T:Server.Objects.UserHandler">
            <summary>
            Repozitar pro DbUser
            </summary>
        </member>
        <member name="T:Server.ScheduledTasks.Email.EmailJob">
            <summary>
            Popis emailoveho background tasku a jeho logika
            </summary>
        </member>
        <member name="T:Server.ScheduledTasks.JobScheduler">
            <summary>
            Zapne background task pro posilani emailu
            </summary>
        </member>
    </members>
</doc>
